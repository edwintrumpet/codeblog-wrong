{"version":3,"sources":["webpack:///./src/styles/components/Card.js","webpack:///./src/components/Card.js","webpack:///./src/styles/pages/index.js","webpack:///./src/pages/index.js"],"names":["Container","styled","div","colors","primary","ImageContainer","TextContainer","background","Category","span","Title","h1","fullContrast","Resume","p","highContrast","AuthorContainer","AvatarContainer","Author","img","Card","id","frontmatter","title","category","author","excerpt","theme","Themes","light","to","query","index","data","posts","allFile","edges","forEach","element","item","node","childMarkdownRemark","push","console","log","map","key","defaultProps"],"mappings":"2OAGaA,EAAYC,IAAOC,IAAV,sEAAGD,CAAH,uKAOF,qBAAGE,OAAoBC,WAET,qBAAGD,OAAoBC,WAI5CC,EAAiBJ,IAAOC,IAAV,2EAAGD,CAAH,gEAOdK,EAAgBL,IAAOC,IAAV,0EAAGD,CAAH,kDAGF,qBAAGE,OAAoBI,cAGlCC,EAAWP,IAAOQ,KAAV,qEAAGR,CAAH,iDAGR,qBAAGE,OAAoBC,WAGvBM,EAAQT,IAAOU,GAAV,kEAAGV,CAAH,iDAGL,qBAAGE,OAAoBS,gBAGvBC,EAASZ,IAAOa,EAAV,mEAAGb,CAAH,iDAGN,qBAAGE,OAAoBY,gBAGvBC,EAAkBf,IAAOC,IAAV,4EAAGD,CAAH,sCAKfgB,EAAkBhB,IAAOC,IAAV,4EAAGD,CAAH,sFAQfiB,EAASjB,IAAOQ,KAAV,mEAAGR,CAAH,+CAGN,qBAAGE,OAAoBY,gB,GAGfd,IAAOkB,IAAV,kEAAGlB,CAAH,8C,WClDH,SAASmB,EAAT,GAQX,IAPFC,EAOC,EAPDA,GAOC,IANDC,YACEC,EAKD,EALCA,MACAC,EAID,EAJCA,SACAC,EAGD,EAHCA,OAEFC,EACC,EADDA,QAEMC,EAAQC,IAAOC,MAErB,OACE,kBAAC,IAAD,CAAMC,GAAIT,GACR,kBAACrB,EAAD,CAAWG,OAAQwB,GACjB,kBAACtB,EAAD,MACA,kBAACC,EAAD,CAAeH,OAAQwB,GACrB,kBAACnB,EAAD,CAAUL,OAAQwB,GAAQH,GAC1B,kBAACd,EAAD,CAAOP,OAAQwB,GAAQJ,GACvB,kBAACV,EAAD,CAAQV,OAAQwB,GAAQD,GACxB,kBAACV,EAAD,KACE,kBAACC,EAAD,MACA,kBAACC,EAAD,CAAQf,OAAQwB,GAAQF,OCnCpC,IAIazB,EAAYC,IAAOC,IAAV,uEAAGD,CAAH,4MAJD,QACC,SCGT8B,EAAK,aAuBH,SAASC,EAAT,GAA0B,IAATC,EAAQ,EAARA,KACxBC,EAAQ,GAUd,OARAD,EAAKE,QAAQC,MAAMC,SAAQ,SAACC,GAC1B,IAAMC,EAAOD,EAAQE,KAAKC,oBACtBF,GAAML,EAAMQ,KAAKH,MAIvBI,QAAQC,IAAIV,GAGV,kBAAC,EAAD,KACGA,EAAMW,KAAI,SAACP,GAAD,OAAa,kBAAClB,EAAD,eAAM0B,IAAKR,EAAQjB,IAAQiB,QA4BzDN,EAAMe,aAAe,CACnBd,KAAM,CACJE,QAAS,CACPC,MAAO","file":"component---src-pages-index-js-00ec1d2397d765e5d3b2.js","sourcesContent":["import styled from 'styled-components';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    border-width: 2px;\n    border-style: solid;\n    height: 250px;\n    transition: all .3s ease;\n    border-color: ${({ colors }) => colors.primary};\n    &:hover {\n        box-shadow: 4px 4px 8px ${({ colors }) => colors.primary};\n    }\n`;\n\nexport const ImageContainer = styled.div`\n    flex: 1;\n    width: 100%;\n    background-color: yellow;\n    overflow: hidden;\n`;\n\nexport const TextContainer = styled.div`\n    width: 100%;\n    padding: 8px;\n    background-color: ${({ colors }) => colors.background};\n`;\n\nexport const Category = styled.span`\n    font-size: 10px;\n    margin-bottom: 8px;\n    color: ${({ colors }) => colors.primary};\n`;\n\nexport const Title = styled.h1`\n    font-size: 16px;\n    margin-bottom: 8px;\n    color: ${({ colors }) => colors.fullContrast};\n`;\n\nexport const Resume = styled.p`\n    font-size: 13px;\n    margin-bottom: 8px;\n    color: ${({ colors }) => colors.highContrast};\n`;\n\nexport const AuthorContainer = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const AvatarContainer = styled.div`\n    background-color: black;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    overflow: hidden;\n`;\n\nexport const Author = styled.span`\n    font-size: 13px;\n    margin-left: 8px;\n    color: ${({ colors }) => colors.highContrast};\n`;\n\nexport const Image = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  ImageContainer,\n  TextContainer,\n  Category,\n  Title,\n  Resume,\n  AuthorContainer,\n  AvatarContainer,\n  Author,\n} from '../styles/components/Card';\nimport Themes from '../styles/constants/themes';\n\nexport default function Card({\n  id,\n  frontmatter: {\n    title,\n    category,\n    author,\n  },\n  excerpt,\n}) {\n  const theme = Themes.light;\n\n  return (\n    <Link to={id}>\n      <Container colors={theme}>\n        <ImageContainer />\n        <TextContainer colors={theme}>\n          <Category colors={theme}>{category}</Category>\n          <Title colors={theme}>{title}</Title>\n          <Resume colors={theme}>{excerpt}</Resume>\n          <AuthorContainer>\n            <AvatarContainer />\n            <Author colors={theme}>{author}</Author>\n          </AuthorContainer>\n        </TextContainer>\n      </Container>\n    </Link>\n  );\n}\n\nCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  frontmatter: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    cover: PropTypes.shape({\n      publicURL: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  excerpt: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst BREAK_TABLET = '500px';\nconst BREAK_DESKTOP = '768px';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Container = styled.div`\n    display: grid;\n    grid-template-columns: repeat(1, auto);\n    grid-gap: 16px;\n    padding: 16px;\n    @media (min-width: ${BREAK_TABLET}) {\n        grid-template-columns: repeat(2, auto);\n    }\n    @media (min-width: ${BREAK_DESKTOP}) {\n        grid-template-columns: repeat(3, auto);\n    }\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Card from '../components/Card';\nimport { Container } from '../styles/pages';\n\nexport const query = graphql`\n  query {\n    allFile {\n      edges {\n        node {\n          childMarkdownRemark {\n            id\n            frontmatter {\n              title\n              category\n              author\n              cover {\n                publicURL\n              }\n            }\n            excerpt(pruneLength: 120, truncate: false)\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function index({ data }) {\n  const posts = [];\n\n  data.allFile.edges.forEach((element) => {\n    const item = element.node.childMarkdownRemark;\n    if (item) posts.push(item);\n  });\n\n  // eslint-disable-next-line no-console\n  console.log(posts);\n\n  return (\n    <Container>\n      {posts.map((element) => <Card key={element.id} {...element} />)}\n    </Container>\n  );\n}\n\nindex.propTypes = {\n  data: PropTypes.shape({\n    allFile: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.shape({\n        node: PropTypes.shape({\n          childMarkdownRemark: PropTypes.shape({\n            id: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string,\n              category: PropTypes.string,\n              author: PropTypes.string,\n              cover: PropTypes.shape({\n                publicURL: PropTypes.string,\n              }),\n            }),\n            excerpt: PropTypes.string,\n          }),\n        }),\n      })),\n    }),\n  }),\n};\n\nindex.defaultProps = {\n  data: {\n    allFile: {\n      edges: [],\n    },\n  },\n};\n"],"sourceRoot":""}